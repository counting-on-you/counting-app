{"version":3,"sources":["firebase.js","components/Home.js","components/Header.js","components/BuildingDetail.js","components/CampusChart.js","components/Buildings.js","components/LineChart.js","components/FloorList.js","components/InlineChart.js","components/FloorItem.js","Store/DataStore.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Home","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","Row","className","style","margin","marginTop","paddingBottom","Col","xs","CampusChart_CampusChart","assign","title","Buildings_Buildings","buildingData","Component","Header","_React$Component","toggle","bind","assertThisInitialized","isOpen","setState","_this2","Navbar","backgroundColor","NavbarBrand","href","Nav","alignItems","navbar","NavItem","Form","FormGroup","Input","type","name","id","placeholder","onBlur","fa","onClick","React","BuildingDetail","match","data","params","console","log","floorsData","floors","FloorList_FloorList","floorData","bid","CampusChart","inject","observer","selected","chartData","dataStore","aggregate","toConsumableArray","campus","paddingLeft","paddingRight","Card","CardBody","CardTitle","fontSize","LineChart_LineChart","Button","color","marginRight","marginLeft","Buildings","business","Math","random","busy","marginBottom","ListGroup","map","building","ListGroupItem","Link","to","concat","InlineChart_InlineChart","LineChart","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","formatDate","date","mode","d","Number","moment","format","filterData","undefined","NOW_SECONDS","floor","Date","now","startTime","HOUR_SECONDS","DAY_SECONDS","WEEK_SECONDS","filter","point","x","es","labels","datasets","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","legend","display","tooltips","enabled","scales","xAxes","ticks","fontColor","gridLines","yAxes","FloorList","collapse","_this$props","Fragment","keys","floorId","FloorItem_FloorItem","objectSpread","floorStatus","InlineChart","y","testData","responsive","width","height","maintainAspectRatio","FloorItem","_this$state","floorName","fid","DataStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","observable","counter","uniqueCount","ids","action","timestampData","agg","forEach","ts","roundedts","amount","defineProperty","App","syncData","buildingRef","on","snapshot","val","fetchPiData","getBuildingList","buildingName","pi_ids","floor_pi_ids","currentFloorPiids","piid","pi_map","pi_id","db","ref","child","aggregateTimestamps","toJS","getPiDataQuery","lastTime","orderByKey","endAt","database","BrowserRouter","index_module","flex","Header_Header","Switch","Route","path","render","BuildingDetail_BuildingDetail","Home_Home","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ad857a5.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCwGf_7Bo5XkOJ16qnv7hdOJM_5GsoQx6M\",\r\n\tauthDomain: \"counting-on-you-87316.firebaseapp.com\",\r\n\tdatabaseURL: \"https://counting-on-you-87316.firebaseio.com\",\r\n\tprojectId: \"counting-on-you-87316\",\r\n\tstorageBucket: \"counting-on-you-87316.appspot.com\",\r\n\tmessagingSenderId: \"51926325505\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { CampusChart, Buildings } from \"./\";\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"justify-content-center\" style={{margin: 0, marginTop: 20, paddingBottom: 20}}>\r\n        <Col xs=\"auto\">\r\n          <CampusChart {...this.props} title=\"Campus Total\"/>\r\n          <Buildings buildingData={this.props.buildingData} {...this.props}/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, Form, FormGroup, Input } from \"reactstrap\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nexport class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    return (\r\n      <div>\r\n        <Navbar style={{backgroundColor:\"#B39DDB\"}}>\r\n          <NavbarBrand href=\"/\" className=\"font-headercolor\">Counting On You</NavbarBrand>\r\n          <Nav className=\"ml-auto\"  style={{ alignItems: 'center'}} navbar>\r\n            <NavItem>\r\n              {isOpen ? (\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"search\"\r\n                      id=\"search\"\r\n                      placeholder=\"Search for a building\"\r\n                      onBlur={() => {this.setState({ isOpen: false })}}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              ) : (\r\n                <FaSearch\r\n                  onClick={() => {\r\n                    this.setState({ isOpen: true });\r\n                  }}\r\n                />\r\n              )}\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { CampusChart, FloorList } from \"./\";\r\n\r\nexport class BuildingDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    let buildingData = this.props.data ? this.props.data[match.params.id] : null;\r\n\r\n    if (buildingData) {\r\n      console.log(buildingData);\r\n      const floorsData = buildingData.floors;\r\n\r\n\r\n      return (\r\n        <Col style={{marginTop: 10, paddingBottom: 10}}>\r\n          <CampusChart {...this.props} id={match.params.id} title={buildingData.name}/>\r\n\t\t\t\t\t<FloorList floorData={floorsData} bid={match.params.id} />\r\n        </Col>\r\n      );\r\n    } else {\r\n      return (\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs=\"auto\">Loading ...</Col>\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Card, CardBody, CardTitle, Button, Col } from \"reactstrap\";\r\nimport { LineChart } from \"./\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { toJS } from 'mobx';\r\n\r\n@inject(\"dataStore\")\r\n@observer\r\nclass CampusChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selected: 0\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { selected } = this.state;\r\n    const { id } = this.props;\r\n    let chartData;\r\n\r\n    if(id && this.props.dataStore.aggregate[id]) {\r\n      chartData = [...this.props.dataStore.aggregate[id].chartData];\r\n    } else {\r\n      chartData = [...this.props.dataStore.aggregate.campus.chartData];\r\n    }\r\n    \r\n    return (\r\n      <Col style={{paddingLeft:0, paddingRight:0}}>\r\n        <Card\r\n          className=\"w-100 color-lightgray\"\r\n        >\r\n          <CardBody className=\"w-100\">\r\n            <CardTitle className='font-white' style={{fontSize: 20}}>{this.props.title}</CardTitle>\r\n          </CardBody>\r\n          <div\r\n            className=\"d-flex justify-content-center w-100\"\r\n            style={{ paddingRight: 10, paddingLeft: 10 }}\r\n          >\r\n            <LineChart data={chartData} selected={selected} />\r\n          </div>\r\n          <CardBody>\r\n            <div className=\"d-flex flex-row-reverse justify-content-center\">\r\n              <Button\r\n                color={selected === 3 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 3\r\n                  });\r\n                }}\r\n              >\r\n                1M\r\n              </Button>\r\n              <Button\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                color={selected === 2 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 2\r\n                  });\r\n                }}\r\n              >\r\n                1W\r\n              </Button>\r\n              <Button\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                color={selected === 1 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 1\r\n                  });\r\n                }}\r\n              >\r\n                1D\r\n              </Button>\r\n              <Button\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                color={selected === 0 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 0\r\n                  });\r\n                }}\r\n              >\r\n                1H\r\n              </Button>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport { CampusChart };\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InlineChart } from \"./\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { toJS } from 'mobx';\r\n\r\n\r\n@inject(\"dataStore\")\r\n@observer\r\nclass Buildings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { buildingData } = this.props;\r\n    const business = Math.random() * 3;\r\n    const busy = business > 1 ? business > 2 ? \"Busy\" : \"Normal\" : \"Quiet\";\r\n\r\n    if (buildingData) {\r\n      // const chartData = [...this.props.dataStore.aggregate.campus.chartData.slice()];\r\n\r\n      return (\r\n        <Col>\r\n          <Row id=\"title\" className=\"justify-content-center font-white\" style={{ marginTop: 10, marginBottom: 2, fontSize: 20 }}>Buildings</Row>\r\n          <Row>\r\n            <ListGroup className=\"w-100\">\r\n              {buildingData.map(building => {\r\n                const bid = building.id;\r\n                let chartData = this.props.dataStore.aggregate[bid] ? [...this.props.dataStore.aggregate[bid].chartData ]: [];\r\n                // console.log(toJS(chartData));\r\n                return (\r\n                  <ListGroupItem key={bid} className='color-lightgray'>\r\n                    <Link to={`/building/${bid}`}>\r\n                      <div className=\"d-flex flex-direction-row justify-content-between align-items-center font-white\">\r\n                        <div className=\"d-flex flex-column\">\r\n                          <div>{building.name}</div>\r\n                          <small className=\"font-busycolor\">{busy}</small>\r\n                        </div>\r\n                        <div>\r\n                          <InlineChart data={chartData} />\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </ListGroupItem>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </Row>\r\n        </Col>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col>\r\n          <Row id=\"title\">Buildings</Row>\r\n          <Row>No data yet</Row>\r\n        </Col>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport { Buildings };\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\n\r\nexport class LineChart extends React.Component {\r\n  formatDate = (date, mode) => {\r\n    const d = Number(date) * 1000;\r\n    if (mode == 0) {\r\n      return moment(d).format(\"h:mma\");\r\n    }\r\n\r\n    if (mode == 1) {\r\n      return moment(d).format(\"h:mma\");\r\n    }\r\n\r\n    if (mode == 2) {\r\n      return moment(d).format(\"h:mma\");\r\n    }\r\n\r\n    if (mode == 3) {\r\n      return moment(d).format(\"h:mma\");\r\n    }\r\n\r\n    return moment(d).format(\"h:mma\");\r\n  };\r\n\r\n  filterData = (data, mode = 0) => {\r\n    const NOW_SECONDS = Math.floor(Date.now() / 1000);\r\n    const HOUR_SECONDS = 60 * 60;\r\n    const DAY_SECONDS = HOUR_SECONDS * 24;\r\n    const WEEK_SECONDS = DAY_SECONDS * 7;\r\n    const MONTH_SECONDS = WEEK_SECONDS * 31;\r\n    let startTime = NOW_SECONDS;\r\n\r\n    if (mode === 0) {\r\n      startTime = NOW_SECONDS - HOUR_SECONDS;\r\n    }\r\n\r\n    if (mode === 1) {\r\n      startTime = NOW_SECONDS - DAY_SECONDS;\r\n    }\r\n\r\n    if (mode === 2) {\r\n      startTime = NOW_SECONDS - WEEK_SECONDS;\r\n    }\r\n\r\n    if (mode === 3) {\r\n      startTime = NOW_SECONDS - MONTH_SECONDS;\r\n    }\r\n\r\n    return data.filter(point => {\r\n      return Number(point.x) > startTime;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const d = this.props.data;\r\n    const mode = this.props.selected;\r\n    const data = this.filterData(d, mode);\r\n\r\n    /*\r\n    console.log(data);\r\n    console.log(\r\n      data.map(point => {\r\n        return this.formatDate(point.x, mode);\r\n      })\r\n    );\r\n    */\r\n    return (\r\n      <div>\r\n        <Line\r\n          data={{\r\n            labels: data.map(point => {\r\n              return this.formatDate(point.x, mode);\r\n            }),\r\n            datasets: [\r\n              {\r\n                label: \"Timestamp\",\r\n                fill: false,\r\n                lineTension: 0.2,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"#B39DDB\",\r\n                borderCapStyle: \"round\",\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"#B39DDB\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"#B39DDB\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data\r\n              }\r\n            ]\r\n          }}\r\n          options={{\r\n            legend: {\r\n              display: false\r\n            },\r\n            tooltips: {\r\n              enabled: false\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  ticks: {\r\n                    display: true, //this will remove only the label\r\n                    fontColor: \"#c0c0c0\"\r\n                  },\r\n                  gridLines: {\r\n                    color: \"#424242\"\r\n                  }\r\n                }\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    display: false //this will remove only the label\r\n                  },\r\n                  gridLines: {\r\n                    color: \"#424242\"\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { CampusChart, InlineChart, FloorItem } from \"./\";\r\n\r\nexport class FloorList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { collapse: false };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  };\r\n\r\n  render() {\r\n    const { floorData, bid} = this.props;\r\n    const { collapse } = this.state;\r\n\r\n    console.log(floorData);\r\n    if (floorData) {\r\n      /*\r\n      const buildingNames = Object.keys(buildingData).map(buildingName => {\r\n        return {...buildingData[buildingName], id: buildingName};\r\n      }); */\r\n      console.log(floorData);\r\n      return (\r\n        <>\r\n          <Row id=\"title\" className=\"justify-content-center font-white\" style={{ marginTop: 10, marginBottom: 2, fontSize: 20}}>Floors</Row>\r\n          <Row>\r\n            <Col>\r\n                <ListGroup>\r\n                  {Object.keys(floorData).map(floorId => {\r\n                    return <FloorItem key={floorId} floorData={{...floorData[floorId], id: bid+\"_\"+floorId }} floorStatus=\"Busy\" />;\r\n                  })}\r\n                </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col>\r\n          <Row id=\"title\">Floors</Row>\r\n          <Row>Loading ...</Row>\r\n        </Col>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nexport class InlineChart extends React.Component {\r\n  filterData = (data, mode = 0) => {\r\n    const NOW_SECONDS = Math.floor(Date.now() / 1000);\r\n    const HOUR_SECONDS = 60 * 60;\r\n    const DAY_SECONDS = HOUR_SECONDS * 24;\r\n    const WEEK_SECONDS = DAY_SECONDS * 7;\r\n    const MONTH_SECONDS = WEEK_SECONDS * 31;\r\n    let startTime = NOW_SECONDS;\r\n\r\n    if (mode === 0) {\r\n      startTime = NOW_SECONDS - HOUR_SECONDS;\r\n    }\r\n\r\n    if (mode === 1) {\r\n      startTime = NOW_SECONDS - DAY_SECONDS;\r\n    }\r\n\r\n    if (mode === 2) {\r\n      startTime = NOW_SECONDS - WEEK_SECONDS;\r\n    }\r\n\r\n    if (mode === 3) {\r\n      startTime = NOW_SECONDS - MONTH_SECONDS;\r\n    }\r\n\r\n    return data.filter(point => {\r\n      return Number(point.x) > startTime;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const exampleData = [\r\n      { x: \"1548519420\", y: 12 },\r\n      { x: \"1548519720\", y: 12 },\r\n      { x: \"1548520020\", y: 12 },\r\n      { x: \"1548520320\", y: 12 },\r\n      { x: \"1548520620\", y: 12 },\r\n      { x: \"1548520920\", y: 12 },\r\n      { x: \"1548521220\", y: 12 },\r\n      { x: \"1548521520\", y: 12 },\r\n      { x: \"1548521820\", y: 12 },\r\n      { x: \"1548522120\", y: 12 },\r\n      { x: \"1548522420\", y: 12 },\r\n      { x: \"1548522720\", y: 12 },\r\n      { x: \"1548523800\", y: 12 },\r\n      { x: \"1548524100\", y: 12 },\r\n      { x: \"1548524400\", y: 12 },\r\n      { x: \"1548524700\", y: 12 },\r\n      { x: \"1548525000\", y: 12 },\r\n      { x: \"1548525300\", y: 12 },\r\n      { x: \"1548525600\", y: 12 },\r\n      { x: \"1548525900\", y: 12 },\r\n      { x: \"1548526200\", y: 12 },\r\n      { x: \"1548526500\", y: 12 },\r\n      { x: \"1548526800\", y: 12 },\r\n      { x: \"1548527100\", y: 12 },\r\n      { x: \"1548527400\", y: 12 },\r\n      { x: \"1548527700\", y: 12 },\r\n      { x: \"1548528000\", y: 12 },\r\n      { x: \"1548528300\", y: 12 },\r\n      { x: \"1548528600\", y: 12 },\r\n      { x: \"1548528900\", y: 12 },\r\n      { x: \"1548529200\", y: 12 },\r\n      { x: \"1548529500\", y: 12 },\r\n      { x: \"1548529800\", y: 12 },\r\n      { x: \"1548530100\", y: 12 },\r\n      { x: \"1548530400\", y: 12 },\r\n      { x: \"1548530700\", y: 12 },\r\n      { x: \"1548531000\", y: 12 },\r\n      { x: \"1548548640\", y: 6 },\r\n      { x: \"1548548940\", y: 30 },\r\n      { x: \"1548549000\", y: 74 },\r\n      { x: \"1548549300\", y: 98 },\r\n      { x: \"1548549600\", y: 86 },\r\n      { x: \"1548549900\", y: 42 },\r\n      { x: \"1548550140\", y: 104 },\r\n      { x: \"1548550200\", y: 115 },\r\n      { x: \"1548552060\", y: 34 },\r\n      { x: \"1548552360\", y: 100 },\r\n      { x: \"1548552660\", y: 46 }\r\n    ];\r\n    const d = this.props.data || exampleData;\r\n    const mode = this.props.selected;\r\n    const testData = this.filterData(d, mode);\r\n\r\n    return (\r\n      <div>\r\n        <Line\r\n          data={{\r\n            labels: [testData],\r\n            datasets: [\r\n              {\r\n                fill: false,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"#B39DDB\",\r\n                borderCapStyle: \"butt\",\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"#B39DDB\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointRadius: 1,\r\n                responsive: true,\r\n                data: testData\r\n              }\r\n            ]\r\n          }}\r\n          width={100}\r\n          height={50}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n              display: false\r\n            },\r\n            tooltips: {\r\n              enabled: false\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  ticks: {\r\n                    display: false //this will remove only the label\r\n                  },\r\n                  gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0)\"\r\n                  }\r\n                }\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    display: false //this will remove only the label\r\n                  },\r\n                  gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0)\"\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { InlineChart, LineChart } from \"./\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\n\r\n@inject(\"dataStore\")\r\n@observer\r\nclass FloorItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { collapse: false, selected: 0 };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  };\r\n\r\n  render() {\r\n    const { collapse, selected } = this.state;\r\n    const { floorData, floorStatus } = this.props;\r\n    const floorName = floorData.name;\r\n    const fid = floorData.id;\r\n    const business = Math.random() * 3;\r\n    const busy = business > 1 ? business > 2 ? \"Busy\" : \"Normal\" : \"Quiet\";\r\n\r\n    const chartData = this.props.dataStore.aggregate[fid]\r\n      ? [...this.props.dataStore.aggregate[fid].chartData]\r\n      : [];\r\n    return (\r\n      <Col>\r\n        <Row>\r\n          <ListGroup className=\"w-100\">\r\n            <ListGroupItem className=\"color-lightgray font-white\" style={{marginBottom:10}}>\r\n              <div\r\n                className=\"d-flex flex-direction-row justify-content-between\"\r\n                onClick={this.toggle}\r\n              >\r\n                <div className=\"d-flex flex-column\">\r\n                  <div>{floorName}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"font-busycolor\">{busy}</div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"d-flex justify-content-center w-100\"\r\n                style={{ paddingRight: 10, paddingLeft: 10 }}\r\n              >\r\n                <LineChart data={chartData} selected={selected} />\r\n              </div>\r\n              <div className=\"d-flex flex-row-reverse justify-content-center\">\r\n              <Button\r\n                color={selected === 3 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 3\r\n                  });\r\n                }}\r\n              >\r\n                1M\r\n              </Button>\r\n              <Button\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                color={selected === 2 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 2\r\n                  });\r\n                }}\r\n              >\r\n                1W\r\n              </Button>\r\n              <Button\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                color={selected === 1 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 1\r\n                  });\r\n                }}\r\n              >\r\n                1D\r\n              </Button>\r\n              <Button\r\n                style={{ marginRight: 5, marginLeft: 5 }}\r\n                color={selected === 0 ? \"primary\" : \"link\"}\r\n                className='color-lightgray font-white'\r\n                onClick={() => {\r\n                  this.setState({\r\n                    selected: 0\r\n                  });\r\n                }}\r\n              >\r\n                1H\r\n              </Button>\r\n            </div>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport { FloorItem };\r\n","import { observable, action } from \"mobx\";\r\n\r\nexport default class DataStore {\r\n  constructor() {}\r\n\r\n  @observable\r\n  pi_map = {};\r\n\r\n  @observable\r\n  aggregate = {\r\n    campus: {\r\n      counter: 0,\r\n      uniqueCount: 0,\r\n      ids: {},\r\n      data: {},\r\n      chartData: []\r\n    }\r\n  };\r\n\r\n  @action\r\n  aggregateTimestamps = (timestampData, id) => {\r\n    let agg = this.aggregate[id] || {\r\n      counter: 0,\r\n      uniqueCount: 0,\r\n      ids: {},\r\n      data: {},\r\n      chartData: []\r\n    };\r\n\r\n    agg.counter++;\r\n    agg.ids[id] = true;\r\n    agg.uniqueCount = Object.keys(agg.ids);\r\n    Object.keys(timestampData).forEach(ts => {\r\n      // round down to nearest 10th minute to avoid offset issues\r\n      const roundedts = Math.floor(Number(ts)/600) * 600;\r\n      let amount = agg.data[roundedts] || 0;\r\n      agg.data[roundedts] = amount + timestampData[ts].length;\r\n    })\r\n\r\n    agg.chartData = Object.keys(agg.data).map(ts => {\r\n      return { x: ts, y: agg.data[ts] };\r\n    });\r\n\r\n\r\n    this.aggregate = {...this.aggregate, [id]: agg };\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport firebase from \"./firebase\";\r\nimport { Home, Header, BuildingDetail } from \"./components\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport DataStore from \"./Store/DataStore\";\r\nimport { Provider } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\nimport { E2BIG } from \"constants\";\r\n\r\nconst dataStore = new DataStore();\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.db = firebase.database();\r\n    this.buildingRef = this.db.ref(\"/building/\");\r\n    // console.log(this.ref);\r\n    this.state = {\r\n      data: null\r\n    };\r\n    this.syncData();\r\n  }\r\n\r\n  syncData = () => {\r\n    console.log(`Called syncData`);\r\n    const ref = this.buildingRef;\r\n    ref.on(\"value\", snapshot => {\r\n      const val = snapshot.val();\r\n      console.log(val);\r\n      this.setState({\r\n        data: val\r\n      });\r\n      this.fetchPiData();\r\n      console.log(val);\r\n      this.getBuildingList(val);\r\n    });\r\n  };\r\n\r\n  getBuildingList = data => {\r\n    const buildingData = Object.keys(data).map(buildingName => {\r\n      return { name: data[buildingName].name, id: buildingName };\r\n    });\r\n\r\n    this.setState({\r\n      buildingData\r\n    });\r\n  };\r\n\r\n  fetchPiData = () => {\r\n    let pi_ids = [];\r\n\r\n    Object.keys(this.state.data).forEach(bid => {\r\n      const buildingData = this.state.data[bid];\r\n      const floorData = buildingData.floors;\r\n      Object.keys(floorData).forEach(fid => {\r\n        let floor_pi_ids = floorData[fid].pi_ids;\r\n        if (!floor_pi_ids) return;\r\n        const currentFloorPiids = Object.keys(floor_pi_ids).map(piid => ({\r\n          piid: piid,\r\n          bid: bid,\r\n          fid: bid + \"_\" + fid\r\n        }));\r\n        pi_ids = pi_ids.concat(currentFloorPiids);\r\n      });\r\n    });\r\n\r\n    dataStore.pi_map = {};\r\n\r\n    pi_ids.forEach(pi_id => {\r\n      const ref = this.db.ref(`/data/`).child(pi_id.piid);\r\n      ref.on(\"value\", snapshot => {\r\n        const val = snapshot.val();\r\n        if (val) {\r\n          dataStore.pi_map[pi_id.piid] = val;\r\n          dataStore.aggregateTimestamps(val, pi_id.fid);\r\n          dataStore.aggregateTimestamps(val, pi_id.bid);\r\n          dataStore.aggregateTimestamps(val, \"campus\");\r\n\r\n          console.log(toJS(dataStore.aggregate));\r\n          console.log(toJS(dataStore.pi_map));\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  getPiDataQuery = (piid, options) => {\r\n    const NOW_SECONDS = Date.now() / 1000;\r\n    const HOUR_SECONDS = 60 * 60;\r\n    const DAY_SECONDS = HOUR_SECONDS * 24;\r\n    const WEEK_SECONDS = DAY_SECONDS * 7;\r\n    const MONTH_SECONDS = WEEK_SECONDS * 31;\r\n    const lastTime = NOW_SECONDS - HOUR_SECONDS;\r\n    return this.db\r\n      .ref(`/data/`)\r\n      .child(piid)\r\n      .orderByKey()\r\n      .endAt(\"\" + lastTime);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Provider dataStore={dataStore}>\r\n          <div style={{ flex: 1 }} className=\"color-darkgray\">\r\n            <Header />\r\n            <Switch>\r\n              <Route\r\n                path=\"/building/:id\"\r\n                render={props => (\r\n                  <BuildingDetail {...props} data={this.state.data} />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/\"\r\n                render={props => (\r\n                  <Home {...props} buildingData={this.state.buildingData} />\r\n                )}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Provider>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}